name: Demo to Delpoy OAS to Kong # Specify the name of the deployment
on:
  push:
    branches:
      - main  # Trigger the deployment when pushing to the main branch
#k
jobs:
  OAS_To_KONG:
    runs-on: ubuntu-latest  # Use Ubuntu as the operating system for the job
           
    steps:
    - name: Checkout Code  # Checkout the code from the repository
      uses: actions/checkout@v2
   
    - name: Install Insomnia CLI  # Install Insomnia CLI for linting and generating Kong configuration
      run: |
        wget https://github.com/Kong/insomnia/releases/download/lib%403.14.0-beta.1/inso-linux-3.14.0-beta.1.tar.xz
        tar -xf inso-linux-3.14.0-beta.1.tar.xz
     #l   
    - name: Installing NodeJs
      uses: actions/setup-node@v1
      
    - name: Installing inso
      run:  npm install -g insomnia
      
    - name: Lint OpenAPI Spec
      run: ./inso lint spec ./api_specs/*.yaml
      
    - name: Generate Kong configuration in declarative format
      run: ./inso generate config ./api_specs/*.yaml --type declarative -o kong.yaml --kongVersion 3
 
    - name: install deck CLI  # Install deck CLI for syncing Kong configuration
      run: |
        curl -sL https://github.com/kong/deck/releases/download/v1.17.2/deck_1.17.2_linux_amd64.tar.gz -o deck.tar.gz
        tar -xf deck.tar.gz -C /tmp 
        sudo cp /tmp/deck /usr/local/bin/

  
    - name: Validate the Kong configuration using deck CLI
      run:  deck validate -s kong.yaml
      

    - name: Deploy to Kong
      run: deck sync -s kong.yaml --kong-addr http://34.125.43.26:8001 
       
#     - name: Integration Testing
#       run: ./inso run test "ApiOps.git" --env "openspec_env"
#     - name: Run the Kong Proxy
#       run: curl -i http://34.125.99.245:8000/httpbin/get
    
#     - name: Deploy to Kong  # Sync the Kong configuration to Kong API Gateway
#       run: deck sync -s kong.yaml  --kong-addr http://34.125.43.26:8001
# #   publish-customer-api-to-portal:  # Publish the API to the dev portal
# #     name: Publish OAS to dev portal
# #     needs: OAS_To_KONG  # Make sure the OAS_To_KONG job is completed before running this job
# #     runs-on: ubuntu-latest  # Use Ubuntu as the operating system for the job
# #     steps:
# #       - name: Checkout branch  # Checkout the branch from the repository
# #         uses: actions/checkout@v2
# #       - name: Install NodeJs  # Install Node.js for running the dev portal CLI
# #         uses: actions/setup-node@v3
# #       - name: Install kon-dev-portal-cli  # Install dev portal CLI
# #         run: npm install -g kong-portal-cli
# #       - name: Deploy to dev portal
# #         run: |          
# #           portal deploy -D --preserve default 
# #         env:
# #           KONG_ADMIN_URL: ${{ secrets.KONG_ADMIN_ADDR }}
#            KONG_ADMIN_TOKEN: ${{ secrets.KONG_ADMIN_TOKEN}}    

   
  
    
